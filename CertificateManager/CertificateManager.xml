<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CertificateManager</name>
    </assembly>
    <members>
        <member name="T:CertificateManager.BusinessLogic.CertificateManagerBL">
            <inheritdoc/>
        </member>
        <member name="M:CertificateManager.BusinessLogic.CertificateManagerBL.#ctor(Microsoft.Extensions.Logging.ILogger{CertificateManager.BusinessLogic.CertificateManagerBL})">
            <summary>
            Load logger
            </summary>
            <param name="logger">mapper</param>        
        </member>
        <member name="M:CertificateManager.BusinessLogic.CertificateManagerBL.GenerateSelfSignedCertificate(CertificateManager.Models.APICertificateRequest)">
            <inheritdoc />        
        </member>
        <member name="M:CertificateManager.BusinessLogic.CertificateManagerBL.GenerateEIDASSelfSignedCertificate(CertificateManager.Models.APICertificateRequest)">
            <inheritdoc />
        </member>
        <member name="T:CertificateManager.BusinessLogic.ICertificateManager">
            <summary>
            CertificateManager logic
            </summary>
        </member>
        <member name="M:CertificateManager.BusinessLogic.ICertificateManager.GenerateSelfSignedCertificate(CertificateManager.Models.APICertificateRequest)">
            <summary>
            Generates a self signed certificate
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CertificateManager.BusinessLogic.ICertificateManager.GenerateEIDASSelfSignedCertificate(CertificateManager.Models.APICertificateRequest)">
            <summary>
            Generates a self signed EIDAS certificate
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CertificateManager.Models.APICertificateRequest">
            <summary>
            Certificate Request
            </summary>
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.Aisp">
            <summary>
            aisp
            </summary>        
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.Aspsp">
            <summary>
            aspsp
            </summary>        
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.City">
            <summary>
            City
            </summary>        
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.CommonName">
            <summary>
            Common name of the TPP company 
            </summary>        
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.Country">
            <summary>
            Country as ISO 3166-1 Alpha 2 (e.g. FI).
            </summary>
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.Organization">
            <summary>
            organization 
            </summary>
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.OrganizationUnit">
            <summary>
            organizationUnit 
            </summary>
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.Piisp">
            <summary>
            piisp
            </summary>        
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.Pisp">
            <summary>
            pisp
            </summary>        
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.PspAuthorityId">
            <summary>
            pspAuthorityId
            </summary>        
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.pspAuthorityName">
            <summary>
            pspAuthorityName
            </summary>        
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.State">
            <summary>
            state
            </summary>        
        </member>
        <member name="P:CertificateManager.Models.APICertificateRequest.Validity">
            <summary>
            validity
            </summary>        
        </member>
        <member name="T:CertificateService.Controllers.CertificateController">
            <summary>
            Certificate Manger API 
            </summary>
        </member>
        <member name="M:CertificateService.Controllers.CertificateController.#ctor(CertificateManager.BusinessLogic.ICertificateManager,Microsoft.Extensions.Logging.ILogger{CertificateService.Controllers.CertificateController},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Load accounts, logger, app settings and url helper
            </summary>
            <param name="manager">accounts</param>
            <param name="logger">logger</param>        
            <param name="config">logger</param>        
        </member>
        <member name="M:CertificateService.Controllers.CertificateController.Post(CertificateManager.Models.APICertificateRequest)">
            <summary>
            Creates and resturns a self signed test certificate
            </summary>
        </member>
        <member name="T:CertificateService.Controllers.EIDASCertificateController">
            <summary>
            Certificate Manger API 
            </summary>
        </member>
        <member name="M:CertificateService.Controllers.EIDASCertificateController.#ctor(CertificateManager.BusinessLogic.ICertificateManager,Microsoft.Extensions.Logging.ILogger{CertificateService.Controllers.EIDASCertificateController},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Load accounts, logger, app settings and url helper
            </summary>
            <param name="manager">accounts</param>
            <param name="logger">logger</param>        
            <param name="config">logger</param>        
        </member>
        <member name="M:CertificateService.Controllers.EIDASCertificateController.Post(CertificateManager.Models.APICertificateRequest)">
            <summary>
            Creates and resturns a self signed test certificate
            </summary>
        </member>
        <member name="P:CertificateService.Program.Configuration">
            <summary>
            Config
            </summary>
        </member>
        <member name="T:CertificateService.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:CertificateService.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Startup constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:CertificateService.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:CertificateService.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure Services 
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:CertificateService.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configures HTTP request pipeline
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
